[{"C:\\Nakukop\\src\\index.tsx":"1","C:\\Nakukop\\src\\reportWebVitals.ts":"2","C:\\Nakukop\\src\\App.tsx":"3","C:\\Nakukop\\src\\containers\\GoodsContainer.tsx":"4","C:\\Nakukop\\src\\redux\\store.tsx":"5","C:\\Nakukop\\src\\redux\\reducers\\rootReducer.tsx":"6","C:\\Nakukop\\src\\components\\Accordion.tsx":"7","C:\\Nakukop\\src\\components\\List.tsx":"8","C:\\Nakukop\\src\\redux\\slices\\nameSlice.tsx":"9","C:\\Nakukop\\src\\redux\\slices\\dataSlice.tsx":"10","C:\\Nakukop\\src\\components\\Background.tsx":"11","C:\\Nakukop\\src\\containers\\ShoppingCartContainer.tsx":"12","C:\\Nakukop\\src\\components\\CardSlider.tsx":"13","C:\\Nakukop\\src\\components\\CartCard.tsx":"14","C:\\Nakukop\\src\\redux\\slices\\cartSlice.tsx":"15","C:\\Nakukop\\src\\components\\removeButton.tsx":"16","C:\\Nakukop\\src\\components\\TotalCart.tsx":"17"},{"size":699,"mtime":1611844479392,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1611751174362,"results":"20","hashOfConfig":"19"},{"size":2029,"mtime":1611959893020,"results":"21","hashOfConfig":"19"},{"size":1507,"mtime":1611952250258,"results":"22","hashOfConfig":"19"},{"size":493,"mtime":1611752748446,"results":"23","hashOfConfig":"19"},{"size":422,"mtime":1611855149722,"results":"24","hashOfConfig":"19"},{"size":1256,"mtime":1611877060330,"results":"25","hashOfConfig":"19"},{"size":2809,"mtime":1611959952819,"results":"26","hashOfConfig":"19"},{"size":842,"mtime":1611785860402,"results":"27","hashOfConfig":"19"},{"size":1180,"mtime":1611958244703,"results":"28","hashOfConfig":"19"},{"size":14791,"mtime":1611844822324,"results":"29","hashOfConfig":"19"},{"size":685,"mtime":1611952119429,"results":"30","hashOfConfig":"19"},{"size":1545,"mtime":1611960662170,"results":"31","hashOfConfig":"19"},{"size":1377,"mtime":1611953311834,"results":"32","hashOfConfig":"19"},{"size":896,"mtime":1611958251870,"results":"33","hashOfConfig":"19"},{"size":594,"mtime":1611958510558,"results":"34","hashOfConfig":"19"},{"size":533,"mtime":1611959833088,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"6qe3gk",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Nakukop\\src\\index.tsx",[],["73","74"],"C:\\Nakukop\\src\\reportWebVitals.ts",[],"C:\\Nakukop\\src\\App.tsx",["75"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { GoodsContainer } from \"./containers/GoodsContainer\";\nimport { ShoppingCartContainer } from \"./containers/ShoppingCartContainer\";\n\nimport { useDispatch } from \"react-redux\";\nimport { updateGoods } from \"./redux/slices/nameSlice\";\nimport { getData } from \"./redux/slices/dataSlice\";\n\nconst MainContainer = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  height: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\ninterface good {\n  B?: boolean;\n  C?: number;\n  CV?: null;\n  G?: number;\n  P?: number;\n  Pl?: null;\n  T?: number;\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const updateRate = async () => {\n    // creating new object with data, updading that object and sending to the store\n    const data = await require(\"./data/data.json\");\n    const randomNumber = Math.floor(Math.random() * 80 + 20);\n    const Goods: object[] = [];\n    const copy = {\n      Error: data.Error,\n      Id: data.Id,\n      Success: data.Success,\n      Value: {\n        Goods: Goods,\n      },\n    };\n    data.Value.Goods.forEach((item: good) => {\n      const newObject: good = {};\n      newObject.B = item.B;\n      if (item.C) {\n        newObject.C = Math.floor(item.C * (randomNumber / 100));\n      }\n      newObject.CV = item.CV;\n      newObject.G = item.G;\n      newObject.P = item.P;\n      newObject.Pl = item.Pl;\n      newObject.T = item.T;\n      Goods.push(newObject);\n    });\n    dispatch(getData({ copy }));\n  };\n\n  setInterval(function () {\n    updateRate();\n  }, 15000);\n\n  const fetchData = async () => {\n    // fetching relevant data and saving in the store\n    const res = await require(\"./data/names.json\");\n    if (res) {\n      dispatch(updateGoods({ res }));\n      updateRate();\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <MainContainer>\n      <ShoppingCartContainer />\n      <GoodsContainer />\n    </MainContainer>\n  );\n}\n\nexport default App;\n","C:\\Nakukop\\src\\containers\\GoodsContainer.tsx",[],"C:\\Nakukop\\src\\redux\\store.tsx",[],"C:\\Nakukop\\src\\redux\\reducers\\rootReducer.tsx",[],"C:\\Nakukop\\src\\components\\Accordion.tsx",[],"C:\\Nakukop\\src\\components\\List.tsx",["76","77"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToCart } from \"../redux/slices/cartSlice\";\r\nimport { updateData } from \"../redux/slices/dataSlice\";\r\n\r\nimport { RootState } from \"../redux/reducers/rootReducer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MainContainer = styled(List)`\r\n  width: 100%;\r\n`;\r\n\r\ninterface item {\r\n  B?: boolean;\r\n  C?: number;\r\n  CV?: null;\r\n  G?: number;\r\n  P?: number;\r\n  Pl?: null;\r\n  T?: number;\r\n}\r\n\r\ninterface props {\r\n  data?: object[];\r\n  mapping?: any;\r\n}\r\n\r\nexport const CustomList: React.FC<props> = ({ data, mapping }) => {\r\n  const [items, setItems] = useState<any[][]>([]);\r\n  const [colors, setColors] = useState<string[]>([]);\r\n  const state = useSelector((state: RootState) => state.dataReducer);\r\n\r\n  useEffect(() => {\r\n    setColors([]);\r\n    items.forEach((item) => {\r\n      let color: string = \"\";\r\n      state[item[7]].C > item[1] ? (color = \"red\") : (color = \"green\");\r\n      setColors((prev) => [...prev, color]);\r\n    });\r\n  }, [state]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const add = (good: any) => {\r\n    //adding each item to the cart on click\r\n    dispatch(addToCart({ cartItems: good, total: good[1] }));\r\n    dispatch(updateData({ good }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    //adding names and relevant values to the each good and adding to the local state\r\n    if (data) {\r\n      setItems([]);\r\n      data.forEach((item: item) => {\r\n        const value = item.T;\r\n        const stock = item.P;\r\n        if (value && mapping[value] && stock && stock > 0) {\r\n          setItems((prev) => [\r\n            ...prev,\r\n            [\r\n              mapping[value].N,\r\n              item.C,\r\n              item.P,\r\n              item.B,\r\n              item.CV,\r\n              item.G,\r\n              item.Pl,\r\n              item.T,\r\n            ],\r\n          ]);\r\n        }\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <MainContainer aria-label=\"goods for sale\">\r\n      {items &&\r\n        items.map((item, index) => {\r\n          return (\r\n            <ListItem button onClick={() => add(item)}>\r\n              <ListItemIcon>{item[2]} x</ListItemIcon>\r\n              <ListItemText primary={item[0]} />\r\n              <ListItemSecondaryAction style={{ color: colors[index] }}>\r\n                {item[1]} â‚½\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          );\r\n        })}\r\n    </MainContainer>\r\n  );\r\n};\r\n","C:\\Nakukop\\src\\redux\\slices\\nameSlice.tsx",[],"C:\\Nakukop\\src\\redux\\slices\\dataSlice.tsx",[],"C:\\Nakukop\\src\\components\\Background.tsx",[],"C:\\Nakukop\\src\\containers\\ShoppingCartContainer.tsx",[],"C:\\Nakukop\\src\\components\\CardSlider.tsx",["78"],"C:\\Nakukop\\src\\components\\CartCard.tsx",[],"C:\\Nakukop\\src\\redux\\slices\\cartSlice.tsx",[],"C:\\Nakukop\\src\\components\\removeButton.tsx",[],"C:\\Nakukop\\src\\components\\TotalCart.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":78,"column":6,"nodeType":"85","endLine":78,"endColumn":8,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":48,"column":6,"nodeType":"85","endLine":48,"endColumn":13,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"89","line":82,"column":6,"nodeType":"85","endLine":82,"endColumn":12,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":55,"column":32,"nodeType":"93","messageId":"94","endLine":55,"endColumn":34},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has a missing dependency: 'mapping'. Either include it or remove the dependency array. If 'setItems' needs the current value of 'mapping', you can also switch to useReducer instead of useState and read 'mapping' in the reducer.",["99"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [fetchData]",{"range":"106","text":"107"},"Update the dependencies array to be: [items, state]",{"range":"108","text":"109"},"Update the dependencies array to be: [data, mapping]",{"range":"110","text":"111"},[1886,1888],"[fetchData]",[1394,1401],"[items, state]",[2267,2273],"[data, mapping]"]